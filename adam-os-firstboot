#!/bin/sh
# the idea is to eventually replace this w/https://github.com/Vanilla-OS/first-setup
# this script should be idempotent, so it can be run again to pick up new changes

if test -e "$HOME"/.config/adam-os/firstboot-done; then
    echo "Already ran"
    exit 0
fi

(
echo "# Waiting for Internet connection"
until /usr/bin/ping -q -c 1 flathub.org; do sleep 1; done
echo "00"

# setup/configure zsh
echo "# Configuring zsh"
sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
echo "10"

echo "# Cloning/updating dotfiles"
if [ ! -d "$HOME/.dotfiles" ]; then
    git clone https://github.com/AdamIsrael/dotfiles.git $HOME/.dotfiles
    cd $HOME/.dotfiles && git submodule update --init --remote && cd $HOME
else
    cd $HOME/.dotfiles && git pull && git submodule update && cd $HOME
fi
echo "20"

# Setup symlinks
echo "# Setting up symlinks"
rm -f $HOME/.zshrc && ln -s $HOME/.dotfiles/zshrc .zshrc && \
rm -f $HOME/.aliases && ln -s $HOME/.dotfiles/aliases $HOME/.aliases &&
rm -f $HOME/.bash_profile && ln -s $HOME/.dotfiles/bash_profile $HOME/.bash_profile && \
rm -f $HOME/.gitconfig && ln -s $HOME/.dotfiles/gitconfig $HOME/.gitconfig && \
rm -f $HOME/.vimrc && ln -s $HOME/.dotfiles/vimrc $HOME/.vimrc
# ln -s $HOME/.dotfiles/zsh/plugins/zsh-syntax-highlighting
echo "30"

# Install virtualization bits
# Can't install via Containerfile because it writes to /var
echo "# Installing virtualization manager"
rpm-ostree install virt-manager libvirt || true
echo "35"

wget -q https://downloads.1password.com/linux/rpm/stable/x86_64/1password-latest.rpm && \
    rpm-ostree install 1password-latest.rpm || true && rm 1password-latest.rpm

echo "# Installing Flatpak(s)"
declare -a arr=(
    "com.discordapp.Discord"
    "com.dropbox.Client"
    "com.getpostman.Postman"
    "com.google.Chrome"
    "com.mattjakeman.ExtensionManager"
    "com.obsproject.Studio"
    "com.slack.Slack"
    "com.valvesoftware.Steam"
    "io.github.Hexchat"
    "io.podman_desktop.PodmanDesktop"
    "md.obsidian.Obsidian"
    "org.gnome.Boxes"
    "org.gnome.Devhelp"
    "org.signal.Signal"
    "org.telegram.desktop"
    "org.wireshark.Wireshark"
    "sh.cider.Cider"
    "us.zoom.Zoom"
)

for i in "${arr[@]}"
do
    echo "# Installing flatpak $1"
    /usr/bin/flatpak install --user --noninteractive flathub $i
    if [ "$?" != 0 ] ; then
            zenity --error \
            --text="Installing $i Failed"
            exit 1
    fi
done
echo "40"

# Install CLI tool(s)
echo "# Install CLI tool(s)"
mkdir -p $HOME/.local/bin

# install completions
mkdir -p ~/.oh-my-zsh/completions && chmod -R 755 ~/.oh-my-zsh/completions
kubectl completion zsh > $HOME/.oh-my-zsh/completions/_kubectl

git clone https://github.com/ahmetb/kubectx.git $HOME/.kubectx
ln -s $HOME/.kubectx/completion/_kubectx.zsh $HOME/.oh-my-zsh/completions/_kubectx.zsh
ln -s $HOME/.kubectx/completion/_kubens.zsh $HOME/.oh-my-zsh/completions/_kubens.zsh

# Write dconf settings
dconf write /org/gnome/mutter/dynamic-workspaces false
dconf write /org/gnome/desktop/wm/preferences/num-workspaces 8
dconf write /org/frippery/bottom-panel/num-rows 2
dconf write /org/frippery/bottom-panel/enable-panel true
## disable dash-to-dock
dconf write /org/gnome/shell/disabled-extensions "@as ['dash-to-dock@micxgx.gmail.com']"
echo "90"

echo "# Reticulating Final Splines"
mkdir -p "$HOME"/.config/adam-os/
touch "$HOME"/.config/adam-os/firstboot-done

) |

   zenity --progress --title="Adam-OS Desktop Firstboot" --percentage=0 --auto-close --no-cancel --width=300

if [ "$?" != 0 ] ; then
        zenity --error \
          --text="Firstboot Configuration Error"
fi